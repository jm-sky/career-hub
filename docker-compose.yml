# Environment variables are loaded from .env file automatically
# Copy .env.example to .env and customize as needed

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: careerhub-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-careerhub}:${DB_PASSWORD:-careerhub_pass}@db:5432/${DB_NAME:-careerhub}
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD:-minioadmin}
      - ENVIRONMENT=development
      - DEBUG=true
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15-alpine
    container_name: careerhub-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-careerhub}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-careerhub_pass}
      POSTGRES_DB: ${DB_NAME:-careerhub}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-careerhub}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: careerhub-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: careerhub-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile.dev
  #   container_name: careerhub-frontend
  #   restart: unless-stopped
  #   environment:
  #     - NEXT_PUBLIC_API_URL=http://localhost:${BACKEND_PORT:-8000}/api/v1
  #     - NEXT_PUBLIC_APP_URL=http://localhost:${FRONTEND_PORT:-3000}
  #     - NEXT_PUBLIC_ENABLE_AI_FEATURES=false
  #     - NEXT_PUBLIC_ENABLE_ANALYTICS=false
  #   ports:
  #     - "${FRONTEND_PORT:-3000}:3000"
  #   volumes:
  #     - ./frontend:/app
  #     - frontend_node_modules:/app/node_modules
  #   depends_on:
  #     - backend
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

volumes:
  postgres_data:
  redis_data:
  minio_data:
  backend_node_modules:
  frontend_node_modules:

networks:
  default:
    name: careerhub-network
